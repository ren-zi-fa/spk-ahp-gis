// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  
}

model User {
  id  String  @id @default(uuid())
  username String 
  password String
}

model Analysis {
  id               String             @id @default(uuid())
  name             String
  createdAt        DateTime           @default(now())
  kriteria         Kriteria[]
  alternatif       Alternatif[]
  criteriaMatrices CriteriaMatrix[]
  alternativeMatrices AlternativeMatrix[]
  hasilPerengkingan HasilPerengkingan[]
    
}

model Kriteria {
  id          String   @id @default(uuid())
  name        String
  createdAt   DateTime @default(now())
  analysisId  String
  analysis    Analysis @relation(fields: [analysisId], references: [id], onDelete: Cascade)
}

model Alternatif {
  id          String   @id @default(uuid())
  name        String 
  lat         Float
  lang        Float
  createdAt   DateTime @default(now())
  analysisId  String
  analysis    Analysis @relation(fields: [analysisId], references: [id], onDelete: Cascade)
}

model CriteriaMatrix {
  id          String   @id @default(uuid())
  data        Json
  createdAt   DateTime @default(now())
  analysisId  String
  analysis    Analysis @relation(fields: [analysisId], references: [id], onDelete: Cascade)
}

model AlternativeMatrix {
  id          String   @id @default(uuid())
  data        Json
  createdAt   DateTime @default(now())
  analysisId  String
  analysis    Analysis @relation(fields: [analysisId], references: [id], onDelete: Cascade)
}

model HasilPerengkingan {
  id          String   @id @default(uuid())
  dataRangking        Json
  createdAt   DateTime @default(now())
  analysisId  String
  analysis    Analysis @relation(fields: [analysisId], references: [id], onDelete: Cascade)
}


